{"version":3,"sources":["components/Home/NavBar (public)/index.js","components/Home/Information cards/index.js","utils/actions.js","utils/GlobalState.js","components/Home/Login Form/index.js","components/Home/Jumbotron/index.js","pages/Homepage.js","components/Nav (afterlogin)/index.js","components/Add Medications/StartTimes/index.js","utils/API.js","components/Add Medications/Toast/index.js","components/Add Medications/Add Meds Form/index.js","pages/AddMedications.js","components/Dashboard/Calendarbar/index.js","components/Dashboard/Reschedule modal/index.js","components/Dashboard/MedsCard/index.js","components/Dashboard/Medsnottaken/index.js","pages/Dashboard.js","components/Home/NavBar (public)/Healthtab/index.js","pages/Healthpage.js","components/My Medications/MedLog/index.js","components/My Medications/Med data/index.js","pages/MyMedicationspage.js","components/Home/Signup form/index.js","pages/Signup.js","App.js","index.js"],"names":["NavBeforeLogin","Navbar","className","expand","Brand","href","height","width","src","alt","Toggle","aria-controls","Collapse","id","Nav","to","InfoCards","ADD_ARTICLES","USER_SIGN_UP","GRAB_USER_INFO","GRAB_USER_ROUTINE","POST_ROUTINE","LOGGED_TO_TRUE","UPDATE_ROUTINE","StoreContext","createContext","Provider","reducer","state","action","console","log","type","user","newUser","headline","articles","transferMe","medroutine","payload","routines","MedLogs","logged","Error","StoreProvider","value","props","useReducer","username","password","firstname","lastname","email","datecount","dosage","dose","userid","medicinename","date","Date","now","time","status","medroutineid","dispatch","useStoreContext","useContext","LoginForm","useState","useRef","htmlFor","aria-describedby","placeholder","ref","onClick","event","preventDefault","userData","current","axios","post","then","data","get","usersRoutine","length","routineid","i","results","medlog","grabLog","catch","err","loginUser","Jumbotron","Home","class","NavAfterLogin","Link","TimeDives","countNum","0","1","2","3","handleSelect","e","key","target","val","timesList","_","times","selectValue","push","map","item","onChange","disabled","selected","hidden","getNews","saveUser","loginDetails","getAllRoutines","postMedroutine","medRoutineData","postMedlog","updateStatus","logId","put","ToastMeds","show","setShow","Toast","onClose","delay","autohide","style","position","top","right","variant","Alert","Body","MedicationForm","userState","setUserState","timeState","setTimeState","useEffect","submitAPI","API","UserId","result","hour3","hourcomputation0","hour0","time0","ampm0","parseInt","minute0","myloop","deconstructMyDateYEAR","slice","deconstructMyDateMONTH","deconstructMyDateDAY","baseday","daytobesave","hourcomputation1","hour1","time1","ampm1","minute1","hourcomputation2","hour2","time2","ampm2","minute2","hourcomputation3","time3","ampm3","minute3","required","Button","AddMedications","updateHandle","moment","require","clickedDay","day","dataset","document","getElementById","innerHTML","add","format","update","Calendarbar","setInterval","clearInterval","scope","data-day","RescheduleModal","HR","MN","AMPM","timeUpdate","setTimeUpdate","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Footer","onHide","constructTime","medLogId","getUserRoutine","passdown","Reschedule","React","modalShow","setModalShow","transferdown","ButtonToolbar","details","MedsCard","name","Medsnottaken","Dashboard","Row","Col","lg","Healthtab","imageUrl","author","url","title","label","description","publishedAt","Health","error","urlToImage","MedLog","Meddata","Accordion","Card","as","eventKey","medicine","MyMedications","SignupForm","firstName","lastName","userName","ApiCalls","response","window","location","replace","Signup","App","exact","path","component","MyMedicatons","ReactDOM","render"],"mappings":"gNAqBeA,MAjBf,WAEE,OACF,kBAACC,EAAA,EAAD,CAAQC,UAAU,YAAYC,OAAO,MACnC,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,QAAQH,UAAU,OAAM,yBAAKI,OAAO,OAAOC,MAAM,QAAQC,IAAI,mBAAmBC,IAAI,UACvG,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKD,GAAG,aACN,kBAAC,IAAD,CAAME,GAAK,UAAUb,UAAU,qCAAqCW,GAAG,qBAAvE,uBAEA,kBAAC,IAAD,CAAME,GAAI,UAAUb,UAAU,mCAAmCW,GAAG,UAApE,cCkBSG,MA9Bf,WACI,OACI,yBAAKd,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,OACX,yBAAKW,GAAG,SAASX,UAAU,qDACvB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,+BAAd,0BACA,uBAAGA,UAAU,aAAb,yIAKZ,yBAAKA,UAAU,OACX,yBAAKW,GAAG,SAASX,UAAU,qDACvB,yBAAKA,UAAU,aACX,wBAAIA,UAAU,+BAAd,6BACA,uBAAGA,UAAU,aAAb,sI,uBCnBfe,EAAe,eAGfC,EAAe,eAEfC,EAAiB,iBACjBC,EAAoB,oBAEpBC,EAAe,eAGfC,EAAiB,iBACjBC,EAAiB,iB,klBCG9B,IAAMC,EAAeC,0BACbC,EAAaF,EAAbE,SAEFC,EAAU,SAACC,EAAOC,GAEpB,OADAC,QAAQC,IAAI,WAAYF,GAChBA,EAAOG,MACX,KAAKd,EAED,OAAO,EAAP,GAAYU,EAAZ,CAAmBK,KAAMJ,EAAOK,UACpC,KAAKjB,EAED,OAAO,EAAP,GAAYW,EAAZ,CAAmBO,SAAUN,EAAOO,WACxC,KAAKjB,EAED,OAAO,EAAP,GAAYS,EAAZ,CAAmBK,KAAMJ,EAAOQ,aACpC,KAAKjB,EAED,OAAO,EAAP,GAAYQ,EAAZ,CAAmBU,WAAYT,EAAOU,UAE1C,KAAKtB,EAED,OAAO,EAAP,GACOW,EADP,CAEIO,SAAUN,EAAOO,WAEzB,IDvCyB,oBCyCrB,OAAO,EAAP,GACOR,EADP,CAEIU,WAAYT,EAAOW,WAG3B,KAAKnB,EACD,OAAO,EAAP,GACOO,EADP,CAEIU,WAAYT,EAAOS,aAG3B,ID5CgB,WC6CZ,OAAO,EAAP,GACOV,EADP,CAEIU,WAAW,CAAET,EAAOY,SAAV,mBAAsBb,EAAMU,eAG9C,KAAKhB,EACD,OAAO,EAAP,GACOM,EADP,CAEIc,QAAQ,IAEhB,KAAKnB,EACD,OAAO,EAAP,GACOK,EADP,CAEIU,WAAW,YAAKT,EAAOS,cAE/B,IDxDqB,gBC0DjB,OADAR,QAAQC,IAAI,iBAAkBF,GACvB,EAAP,GACOD,EADP,CAEIU,WAAY,CAACT,EAAOY,WAE5B,ID7DmB,cC8Df,OAAO,EAAP,GACOb,EADP,CAEIU,WAAU,YAAOV,EAAMU,cAI/B,QAAS,MAAM,IAAIK,MAAM,yBAI3BC,EAAgB,SAAC,GAA6B,EAA3BC,MAA4B,IAAbC,EAAY,2BACtBC,qBAAWpB,EAAS,CAC1Ce,QAAQ,EACRP,SAAU,GACVF,KAAM,CACFpB,GAAI,EACJmC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,SAAU,GACVC,MAAO,IAEXd,WAAY,CAAC,CACTzB,GAAI,EACJwC,UAAW,EACXC,OAAQ,EACRC,KAAM,EACNC,OAAQ,EACRC,aAAc,GACdhB,QAAS,CAAC,CACN5B,GAAI,EACJ6C,KAAMC,KAAKC,MACXC,KAAM,EACNC,QAAQ,EACRC,aAAc,QAxBsB,mBACzCnC,EADyC,KAClCoC,EADkC,KA4BhD,OAAO,kBAAEtC,EAAF,eAAWmB,MAAO,CAACjB,EAAOoC,IAAelB,KAG9CmB,EAAkB,WACpB,OAAOC,qBAAW1C,IClBP2C,MA9Ff,WAAsB,IAAD,EAESD,qBAAW1C,GAFpB,mBAEVI,EAFU,KAEHoC,EAFG,OAGqBI,oBAAS,GAH9B,6BAKjBtC,QAAQC,IAAI,gBAAiBH,GAC7B,IAAMoB,EAAWqB,mBACXpB,EAAWoB,mBAgEjB,OACIzC,EAAMc,OAAU,kBAAC,IAAD,CAAU3B,GAAG,eACzB,yBAAKF,GAAG,UAAUX,UAAU,qCACxB,yBAAKA,UAAU,aACX,0BAAMA,UAAU,oBACZ,yBAAKA,UAAU,cACX,2BAAOoE,QAAQ,YAAf,YACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeW,GAAG,qBAAqB0D,mBAAiB,YAAYC,YAAY,mBAAmBC,IAAKzB,KAIzI,yBAAK9C,UAAU,cACX,2BAAOoE,QAAQ,yBAAf,YACA,2BAAOtC,KAAK,WAAW9B,UAAU,eAAeW,GAAG,wBAAwB2D,YAAY,mBAAmBC,IAAKxB,KAEnH,4BAAQjB,KAAK,SAASnB,GAAG,cAAcX,UAAU,2BAA2BwE,QA9EhG,SAAoBC,GAChBA,EAAMC,iBACN,IAAIC,EAAW,CACX7B,SAAUA,EAAS8B,QAAQjC,MAC3BI,SAAUA,EAAS6B,QAAQjC,QASnC,SAAmBG,EAAUC,GACzB8B,IAAMC,KAAK,aAAc,CACrBhC,SAAUA,EACVC,SAAUA,IAETgC,MAAK,SAAUC,GAIZ,IAUYrE,EAVRwB,EAAa6C,EAAKA,KACtBlB,EAAS,CAAEhC,KAAMb,EAAgBkB,eASrBxB,EAPGqE,EAAKA,KAAKrE,GASjCkE,IAAMI,IAAI,aAAetE,EAAK,eAAeoE,MAAK,SAAUG,GACxDtD,QAAQC,IAAI,eAAgBqD,EAAaF,KAAKG,QACtBD,EAAaF,KAEJ,IAA7BE,EAAaF,KAAKG,OAClBrB,EAAS,CAAEhC,KAAMV,IAO7B,SAAiBgE,GACb,IADyB,IAAD,WACfC,GACLR,IAAMI,IAAI,mBAAqBG,EAAUC,GAAG1E,GAAK,WAAWoE,MAAK,SAAUO,GACvE1D,QAAQC,IAAIyD,EAAQN,MACpBI,EAAUC,GAAGE,OAASD,EAAQN,KAE9BpD,QAAQC,IAAIH,EAAMc,QACd6C,IAAMD,EAAUD,OAAS,IACzBrB,EAAS,CAAEhC,KAAMZ,EAAmBmB,QAAS+C,IAC7CtB,EAAS,CAAEhC,KAAMV,SARpBiE,EAAI,EAAGA,EAAID,EAAUD,OAAQE,IAAM,EAAnCA,GANDG,CAAQN,EAAaF,YAdxBS,OAAM,SAAUC,GACb9D,QAAQC,IAAI6D,MAlBpBC,CAAUhB,EAAS7B,SAAU6B,EAAS5B,YAoEtB,cClET6C,MAvBf,WACI,OACI,yBAAKjF,GAAG,YAAYX,UAAU,oCAC1B,yBAAKW,GAAG,gBAAgBX,UAAU,aAC9B,yBAAKA,UAAU,sDACX,yBAAMA,UAAU,8BACR,wBAAIW,GAAG,YAAYX,UAAU,6BAA7B,cAEA,wBAAIW,GAAG,WAAWX,UAAU,6BAA5B,aAEZ,yBAAKA,UAAU,6BAA6BW,GAAG,SACvC,kBAAC,EAAD,WCKTkF,MAdf,WACI,OACI,oCACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKC,MAAM,aACR,kBAAC,EAAD,SCkBAC,MAvBf,WAEE,OAGA,kBAAChG,EAAA,EAAD,CAASC,UAAU,YAAYC,OAAO,MACpC,kBAAC,IAAD,CAAMY,GAAK,aAAab,UAAU,OAAM,yBAAKI,OAAO,OAAOC,MAAM,QAAQC,IAAI,mBAAmBC,IAAI,UACpG,kBAACR,EAAA,EAAOS,OAAR,CAAeC,gBAAc,qBAC7B,kBAACV,EAAA,EAAOW,SAAR,CAAiBC,GAAG,oBACpB,kBAACC,EAAA,EAAD,CAAKZ,UAAU,UAAUW,GAAG,cACtB,kBAAC,IAAD,CAAME,GAAK,aAAab,UAAU,kBAAlC,aACA,kBAAC,IAAD,CAAMa,GAAI,iBAAiBb,UAAU,0BAArC,kBACA,kBAAC,IAAD,CAAMa,GAAK,kBAAiBb,UAAU,0BAAtC,oBAEJ,kBAACY,EAAA,EAAIoF,KAAL,CAAU7F,KAAO,IAAIH,UAAU,qCAAqCW,GAAG,UAAvE,a,kBCqESsF,MAtFf,SAAmBrD,GAGfhB,QAAQC,IAAI,WAAYe,GACxB,IAAIsD,EAAW,CACXC,EAAG,QACHC,EAAG,SACHC,EAAG,QACHC,EAAG,UAGP,SAASC,EAAaC,GAClBA,EAAE9B,iBACF9B,EAAM2D,aAAa,CAAEE,IAAKD,EAAEE,OAAO/F,GAAIgG,IAAKH,EAAEE,OAAO/D,QAiBzD,IAAIiE,EAAY,GAMhB,OALAC,IAAEC,MAAMlE,EAAMmE,aAAa,SAAC1B,GACxBuB,EAAUI,KACN3B,MAIJuB,EAAUK,KAAI,SAACC,EAAM7B,GACjB,OAAO,yBAAKoB,IAAKpB,GACb,6BACA,+BAAKa,EAASb,GAAd,UACA,6BACA,yBAAKrF,UAAU,OACX,yBAAKA,UAAU,OACX,4BAAQA,UAAU,eAAemH,SAAUZ,EAAc5F,GAAI,OAAS0E,GAClE,4BAAQ1C,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,QACA,4BAAQ3E,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGR,yBAAK3C,UAAU,OACX,4BAAQA,UAAU,eAAemH,SAAUZ,EAAc5F,GAAI,SAAW0E,GACpE,4BAAQ1C,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,UAEA,4BAAQ3E,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGR,yBAAK3C,UAAU,OACX,4BAAQA,UAAU,eAAemH,SAAUZ,EAAc5F,GAAI,OAAS0E,GAClE,4BAAQ1C,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,SAEA,4BAAQ3E,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,QAGR,mCC/EL,GAEX4E,QAAS,WACL,OAAO1C,IAAMI,IAAI,4GAGrBuC,SAAW,SAASxF,GAEhB,OAAO6C,IAAMC,KAAK,YAAa9C,IAGnC2D,UAAY,SAAU8B,GAElB,OAAO5C,IAAMC,KAAK,kBAAmB2C,IAGzCC,eAAgB,SAAU/G,GACtB,OAAOkE,IAAMI,IAAI,aAAetE,EAAK,gBAGzCgH,eAAgB,SAAUhH,EAAIiH,GAC1B,OAAO/C,IAAMC,KAAK,aAAenE,EAAK,cAAeiH,IAGzDC,WAAY,SAAUlH,EAAIkB,GACtB,OAAOgD,IAAMC,KAAK,mBAAqBnE,EAAK,WAAYkB,IAG5DiG,aAAc,SAAUC,EAAOnE,GAC3B,OAAOiB,IAAMmD,IAAI,eAAiBD,EAAOnE,K,0BCMhCqE,MAjCjB,WAAsB,IAAD,EACO/D,oBAAS,GADhB,mBACVgE,EADU,KACJC,EADI,KAGjB,OACI,oCAEE,kBAACC,EAAA,EAAD,CAAOC,QAAS,kBAAMF,GAAQ,IAAQD,KAAMA,EAAMI,MAAO,IAAMC,UAAQ,EACrEC,MAAO,CACHC,SAAU,QACVC,IAAK,EACLC,MAAO,EACPC,QAAS,YAIT,kBAACC,EAAA,EAAD,CAAOD,QAAQ,UAAUjI,GAAG,eAM5B,kBAACyH,EAAA,EAAMU,KAAP,6CAIN,4BAASnI,GAAG,iBAAiBX,UAAU,gBAAgBwE,QAAS,kBAAM2D,GAAQ,KAA9E,oB,8NC6eKY,MAjgBf,WAA2B,IAAD,EACY7E,mBAAS,CACvC6C,YAAa,MAFK,mBACfiC,EADe,KACJC,EADI,KAOhB1F,EAAeY,mBACfd,EAAOc,mBAEPX,EAAOW,mBACPhB,EAAYgB,mBAEZf,EAASe,mBAbO,EAeIJ,IAfJ,mBAefrC,EAfe,KAeRoC,EAfQ,OAgBYI,mBAAS,IAhBrB,mBAgBfgF,EAhBe,KAgBJC,EAhBI,KAmBtBvH,QAAQC,IAAI,WAAamH,EAAUjC,aAoBnCqC,qBAAU,WACNxH,QAAQC,IAAI,YAAaqH,KA8B1B,CAACA,IAEJ,IAOMG,EAAY,WAEdC,EAAI3B,eAAejG,EAAMK,KAAKpB,GAAI,CAE9B0C,KAAMA,EAAKuB,QAAQjC,MACnBa,KAAMA,EAAKoB,QAAQjC,MACnBQ,UAAWA,EAAUyB,QAAQjC,MAC7BS,OAAQA,EAAOwB,QAAQjC,MACvB4G,OAAQ7H,EAAMK,KAAKpB,GACnB4C,aAAcA,EAAaqB,QAAQjC,QACpCoC,MAAK,SAAAyE,GAwBJ,GAvBA5H,QAAQC,IAAI,iBAAkB2H,GAC9B1F,EAAS,CACLhC,KAAMX,EACNiB,WAAYoH,IAoBZN,EAAUO,MAAO,CACjB7H,QAAQC,IAAI,2CAEZ,IAAI6H,EAAmBR,EAAUS,MAC7BC,EAAQ,GAEY,OAApBV,EAAUW,OAEVD,GADAF,EAAmBI,SAASJ,GAAoB,IACrB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAEI,OAApBV,EAAUW,QACjBD,EAAQF,EAAmB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAQ3B,IANA,IAAII,EAAS7G,EAAUyB,QAAQjC,MAC3BsH,EAAwBzG,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACpDC,EAAyB3G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACrDE,EAAuB5G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,IACnDG,EAAUP,SAASM,GAEd/E,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAMiG,EACNhG,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAI0I,EAAmBrB,EAAUsB,MAC7BC,EAAQ,GAEY,OAApBvB,EAAUwB,OAEVD,GADAF,EAAmBT,SAASS,GAAoB,IACrB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,IAEI,OAApBvB,EAAUwB,QACjBD,EAAQF,EAAmB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,IAE3B,IAAK,IAAIpF,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAM8G,EACN7G,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAI+I,EAAmB1B,EAAU2B,MAC7BC,EAAQ,GAEY,OAApB5B,EAAU6B,OAEVD,GADAF,EAAmBd,SAASc,GAAoB,IACrB,IAAM1B,EAAU8B,QAAU,MACrDpJ,QAAQC,IAAI,UAAWiJ,IAEI,OAApB5B,EAAU6B,QACjBD,EAAQF,EAAmB,IAAM1B,EAAU8B,QAAU,MACrDpJ,QAAQC,IAAI,UAAWiJ,IAE3B,IAAK,IAAIzF,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAMmH,EACNlH,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAIoJ,EAAmB/B,EAAUO,MAC7ByB,EAAQ,GAEY,OAApBhC,EAAUiC,OAEVD,GADAD,EAAmBnB,SAASmB,GAAoB,IACrB,IAAM/B,EAAUkC,QAAU,MACrDxJ,QAAQC,IAAI,UAAWqJ,IAEI,OAApBhC,EAAUiC,QACjBD,EAAQD,EAAmB,IAAM/B,EAAUkC,QAAU,MACrDxJ,QAAQC,IAAI,UAAWqJ,IAE3B,IAAK,IAAI7F,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAMuH,EACNtH,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,mCAEzB,GAAIqH,EAAU2B,MAAO,CACxBjJ,QAAQC,IAAI,2CAEZ,IAAI6H,EAAmBR,EAAUS,MAC7BC,EAAQ,GAEY,OAApBV,EAAUW,OAEVD,GADAF,EAAmBI,SAASJ,GAAoB,IACrB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAEI,OAApBV,EAAUW,QACjBD,EAAQF,EAAmB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAQ3B,IANA,IAAII,EAAS7G,EAAUyB,QAAQjC,MAC3BsH,EAAwBzG,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACpDC,EAAyB3G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACrDE,EAAuB5G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,IACnDG,EAAUP,SAASM,GAEd/E,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAMiG,EACNhG,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAI0I,EAAmBrB,EAAUsB,MAC7BC,EAAQ,GAEY,OAApBvB,EAAUwB,OAEVD,GADAF,EAAmBT,SAASS,GAAoB,IACrB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,IAEI,OAApBvB,EAAUwB,QACjBD,EAAQF,EAAmB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,IAG3B,IAAK,IAAIpF,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAM8G,EACN7G,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAI+I,EAAmB1B,EAAU2B,MAC7BC,EAAQ,GAEY,OAApB5B,EAAU6B,OAEVD,GADAF,EAAmBd,SAASc,GAAoB,IACrB,IAAM1B,EAAU8B,QAAU,MACrDpJ,QAAQC,IAAI,UAAWiJ,IAEI,OAApB5B,EAAU6B,QACjBD,EAAQF,EAAmB,IAAM1B,EAAU8B,QAAU,MACrDpJ,QAAQC,IAAI,UAAWiJ,IAG3B,IAAK,IAAIzF,EAAI,EAAGA,EAAI2E,EAAQ3E,IAAK,CAC7B,IAAIiF,EAAcD,EAAUhF,EAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,EACnE3G,KAAMmH,EACNlH,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,mCAEzB,GAAIqH,EAAUsB,MAAO,CAExB5I,QAAQC,IAAI,2CACZ,IAAI6H,EAAmBR,EAAUS,MAC7BC,EAAQ,GAEY,OAApBV,EAAUW,OAEVD,GADAF,EAAmBI,SAASJ,GAAoB,IACrB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAEI,OAApBV,EAAUW,QACjBD,EAAQF,EAAmB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,IAS3B,IANA,IAAII,EAAS7G,EAAUyB,QAAQjC,MAC3BsH,EAAwBzG,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACpDC,EAAyB3G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACrDE,EAAuB5G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,IACnDG,EAAUP,SAASM,GAEd/E,GAAI,EAAGA,GAAI2E,EAAQ3E,KAAK,CAC7B,IAAIiF,GAAcD,EAAUhF,GAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,GACnE3G,KAAMiG,EACNhG,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,6BAI5B,IAAI0I,GAAmBrB,EAAUsB,MAC7BC,GAAQ,GAEY,OAApBvB,EAAUwB,OAEVD,IADAF,GAAmBT,SAASS,IAAoB,IACrB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,KAEI,OAApBvB,EAAUwB,QACjBD,GAAQF,GAAmB,IAAMrB,EAAUyB,QAAU,MACrD/I,QAAQC,IAAI,UAAW4I,KAG3B,IAAK,IAAIpF,GAAI,EAAGA,GAAI2E,EAAQ3E,KAAK,CAC7B,IAAIiF,GAAcD,EAAUhF,GAC5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAEI6C,KAAMyG,EAAwB,IAAME,EAAyB,IAAMG,GACnE3G,KAAM8G,GACN7G,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,mCAGzB,GAAIqH,EAAUS,MAAO,CACxB/H,QAAQC,IAAI,0CACZ,IAAI6H,GAAmBR,EAAUS,MAC7BC,GAAQ,GAEY,OAApBV,EAAUW,OAEVD,IADAF,GAAmBI,SAASJ,IAAoB,IACrB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,KAEI,OAApBV,EAAUW,QACjBD,GAAQF,GAAmB,IAAMR,EAAUa,QAAU,MACrDnI,QAAQC,IAAI,UAAW+H,KAS3B,IANA,IAAII,GAAS7G,EAAUyB,QAAQjC,MAC3BsH,GAAwBzG,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACpDC,GAAyB3G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,GACrDE,GAAuB5G,EAAKoB,QAAQjC,MAAMuH,MAAM,EAAG,IACnDG,GAAUP,SAASM,IAEd/E,GAAI,EAAGA,GAAI2E,GAAQ3E,KAAK,CAC7B,IAAIiF,GAAcD,GAAUhF,GAG5BiE,EAAIzB,WAAW2B,EAAOxE,KAAKrE,GACvB,CAGI6C,KAAMyG,GAAwB,IAAME,GAAyB,IAAMG,GACnE3G,KAAMiG,GACNhG,QAAQ,IACTmB,KAAKnD,QAAQC,IAAI,8BAIhCyH,EAAI5B,eAAehG,EAAMK,KAAKpB,IACzBoE,MAAK,SAAAO,GACF1D,QAAQC,IAAI,SAAUyD,EAAQN,MAC9B,IAAI1C,EAAWgD,EAAQN,KACvBpD,QAAQC,IAAI,qCAAsCS,GAElDwB,EAAS,CAAEhC,KAAMT,EAAgBe,WAAYE,OAG9CyC,MAAK,WACJnD,QAAQC,IAAI,wBAAyBH,SAG5C+D,OAAM,SAAAC,GAAG,OAAI9D,QAAQC,IAAI6D,OAKlC,OACI,8BAEI,yBAAK1F,UAAU,cACX,2BAAOoE,QAAQ,4BAAf,mBACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeqL,UAAQ,EAAC9G,IAAKhB,EAAce,YAAY,wCAGxF,yBAAKtE,UAAU,cACX,2BAAOoE,QAAQ,4BAAf,QACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeqL,UAAQ,EAAC9G,IAAKlB,EAAMiB,YAAY,iBAGhF,yBAAKtE,UAAU,cACX,2BAAOoE,QAAQ,4BAAf,qCACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeqL,UAAQ,EAAC9G,IAAKf,EAAMc,YAAY,gBAGhF,yBAAKtE,UAAU,cACX,2BAAOoE,QAAQ,4BAAf,qDACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeqL,UAAQ,EAAC9G,IAAKpB,EAAWmB,YAAY,QAWrF,yBAAKtE,UAAU,cACX,2BAAOoE,QAAQ,6BAAf,gDACA,4BACIzB,MAAOqG,EAAUjC,YACjBI,SAxaG,SAACX,GAChByC,EAAa,CAAElC,YAAaP,EAAEE,OAAO/D,SAwazB3C,UAAU,eAAeuE,IAAKnB,EAAQzC,GAAG,aACzC,4BAAQgC,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,OAIR,yBAAK3C,UAAU,cACX,2BAAOoE,QAAQ,4BAAf,6CAEA,kBAAC,EAAD,CAAWmC,aAhbvB,SAAsBvB,GAClBpD,QAAQC,IAAI,gBACZsH,E,yVAAa,IAAKD,EAAN,eAAkBlE,EAAKyB,IAAMzB,EAAK2B,QA8aCI,YAAaiC,EAAUjC,cAC7DnF,QAAQC,IAAI,aAAcmH,EAAUjC,cAGzC,kBAACuE,EAAA,EAAD,CAAQ3K,GAAG,SAASX,UAAW,eAAewE,QApYjC,SAACgC,EAAGxB,GACrBwB,EAAE9B,iBAEF2E,MAiYI,IAAsE,kBAAC,EAAD,2BC/bnEkC,IClBXC,EDkBWD,EAlBf,WACI,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKvL,UAAU,wBACX,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,0CAAd,oBACA,kBAAC,EAAD,UCThByL,EAASC,EAAQ,KAMrB,SAASC,EAAWlH,GAEhB,IAAImH,EAAM9B,SAASrF,EAAMiC,OAAOmF,QAAb,KAGnBC,SAASC,eAAe,cACnBC,UAAYP,IAASQ,IAAIL,EAAK,QAAQM,OAAO,qBAXtDT,IAASS,SAcT,IAAIC,EAAS,WACTL,SAASC,eAAe,eACnBC,UAAY,UAAYP,IAASS,OAAO,QA2DlCE,MAvDf,WASI,OARAhD,qBAAU,WAEN,OADAoC,EAAea,YAAYF,EAAQ,KAC5B,WACHG,cAAcd,MAEnB,IAIC,6BACI,yBAAKxL,UAAU,yBACX,2BAAOA,UAAU,2CACb,+BACI,4BACI,wBAAIW,GAAG,cAAc4L,MAAM,YAS3C,yBAAKvM,UAAU,OACX,2BAAOA,UAAU,gCACb,+BACI,4BACI,wBAAIuM,MAAM,OAAOd,IAASS,OAAO,QACjC,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,QAChD,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,QAChD,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,QAChD,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,QAChD,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,QAChD,wBAAIK,MAAM,OAAOd,IAASQ,IAAI,EAAG,QAAQC,OAAO,SAEpD,4BACI,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACnG,wBAAIM,WAAS,IAAIhI,QAASmH,GAAcF,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACvE,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACnG,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACnG,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACnG,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,MACnG,wBAAIM,WAAS,IAAIhI,QAASmH,EAAY3L,UAAU,mBAAoByL,IAASQ,IAAI,EAAG,QAAQC,OAAO,SAK/G,wBAAIlM,UAAU,4CAA2C,yBAAKW,GAAG,mB,kBC7DjF,SAAS8L,GAAgB7J,GAAQ,IAAD,EAEJoB,qBAAW1C,GAFP,mBAEvBI,EAFuB,KAEhBoC,EAFgB,KAG9BlC,QAAQC,IAAI,SAAUH,GAHQ,MAMMwC,mBAAS,CAC3CwI,GAAI,GACJC,GAAI,GACJC,KAAM,KATsB,mBAMvBC,EANuB,KAMXC,EANW,KAkG9B,OACE,kBAACC,EAAA,EAAD,iBACMnK,EADN,CAEEoK,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,CAAarN,UAAU,aAAaW,GAAG,iCAAvC,oBAIF,kBAACoM,EAAA,EAAMjE,KAAP,KACE,wBAAI9I,UAAU,cAAd,2CACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,wCAAQA,UAAU,eAAeW,GAAG,4BAA4BwG,SAlG1E,SAAiBX,GACfA,EAAE9B,iBACFmI,EAAWH,GAAKlG,EAAEE,OAAO/D,MAEzBmK,EAAcD,GACdjL,QAAQC,IAAIgL,KA6FJ,KAAuF,QACrF,4BAAQlK,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,QACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,sCACA,sCACA,wCAGJ,yBAAKtH,UAAU,SACb,wCAAQA,UAAU,eAAeW,GAAG,4BAA4BwG,SA5G1E,SAAiBX,GACfA,EAAE9B,iBACFmI,EAAWF,GAAKnG,EAAEE,OAAO/D,MAEzBmK,EAAcD,GACdjL,QAAQC,IAAIgL,KAuGJ,KAAuF,WACrF,4BAAQlK,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,UACA,sCACA,sCACA,sCACA,wCAGJ,yBAAKtH,UAAU,SACb,wCAAQA,UAAU,eAAeW,GAAG,4BAA4BwG,SA9G1E,SAAiBX,GACfA,EAAE9B,iBAEFmI,EAAWD,KAAOpG,EAAEE,OAAO/D,MAE3BmK,EAAcD,GACdjL,QAAQC,IAAIgL,KAwGJ,KAAuF,QACrF,4BAAQlK,MAAM,GAAGyE,UAAQ,EAACC,UAAQ,EAACC,QAAM,GAAzC,SACA,sCACA,wCAGJ,+BAIJ,kBAACyF,EAAA,EAAMO,OAAP,KACE,kBAAChC,EAAA,EAAD,CAAQtL,UAAU,cAAcwE,SAAS5B,EAAM2K,OAhHrD,SAAoB/G,GAClBA,EAAE9B,iBACF,IAAI8I,EAAgB,GAEhBC,EAAWjH,EAAEE,OAAO/F,GA6BxB,SAAS+M,EAAe/M,GAEtBkE,IAAMI,IAAI,aAAetE,EAAK,eAAeoE,MAAK,SAAUG,GAC1DtD,QAAQC,IAAI,eAAgBqD,EAAaF,KAAKG,QAOlD,SAAiBC,GACf,IAD2B,IAAD,WACjBC,GACPR,IAAMI,IAAI,mBAAqBG,EAAUC,GAAG1E,GAAK,WAAWoE,MAAK,SAAUO,GACzE1D,QAAQC,IAAIyD,EAAQN,MACpBI,EAAUC,GAAGE,OAASD,EAAQN,KAE9BpD,QAAQC,IAAIH,EAAMc,QACd6C,IAAMD,EAAUD,OAAS,GAC3BrB,EAAS,CAAEhC,KAAMZ,EAAmBmB,QAAS+C,QAP1CC,EAAI,EAAGA,EAAID,EAAUD,OAAQE,IAAM,EAAnCA,GALPG,CAAQN,EAAaF,SAhCD,OAApB6H,EAAWD,MAEbY,EADM1D,SAAS+C,EAAWH,IAAM,GACV,IAAMG,EAAWF,GAAK,MAC5C/K,QAAQC,IAAI,UAAW2L,GACvBlE,EAAIxB,aAAa2F,EAAU,CACzB9J,KAAM6J,IACLzI,MAAK,SAAAyE,GACN5H,QAAQC,IAAI2H,GAIZkE,EAAehM,EAAMK,KAAKpB,SAG5B6M,EAAgBX,EAAWH,GAAK,IAAMG,EAAWF,GAAK,MACtD/K,QAAQC,IAAI2L,GACZlE,EAAIxB,aAAa2F,EAAU,CACzB9J,KAAM6J,IACLzI,MAAK,SAAAyE,GAEN5H,QAAQC,IAAI2H,GAEZkE,EAAehM,EAAMK,KAAKpB,UAmFyCA,GAAIiC,EAAM+K,UAA7E,iBA6BOC,OAtBf,SAAoBhL,GAAQ,IAAD,EACSiL,IAAM3J,UAAS,GADxB,mBAClB4J,EADkB,KACPC,EADO,KAMzB,OAHAnM,QAAQC,IAAI,aAAce,EAAMoL,cAI9B,kBAACC,GAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,CAAQtL,UAAU,sBAAsBW,GAAG,cAAc6D,QAAS,kBAAMuJ,GAAa,KAArF,cAIA,kBAACtB,GAAD,CACEkB,SAAU/K,EAAMoL,aAChBE,QAAStL,EACTsF,KAAM4F,EACNP,OAAQ,kBAAMQ,GAAa,Q,OClGpBI,OA7Ef,SAAkBvL,GAChBhB,QAAQC,IAAI,WAAYe,EAAMmF,OADP,MAEG/D,qBAAW1C,GAFd,mBAEhBI,EAFgB,KAEToC,EAFS,KAqDvB,OACE,yBAAK9D,UAAU,wBACb,yBAAKW,GAAG,sBAAsBX,UAAU,aACtC,wBAAIA,UAAU,0BAA0B4C,EAAMY,MAC9C,wBAAI7C,GAAG,OAAOX,UAAU,0BAA0B4C,EAAMe,MACxD,wBAAIhD,GAAG,WAAWX,UAAU,eAAe4C,EAAMwL,KAAjD,KACA,wBAAIzN,GAAG,UAAUX,UAAU,eAAe4C,EAAMS,MAChD,yBAAKrD,UAAU,8BAEX4C,EAAMgB,OAEJ,qCADF,kBAAC0H,EAAA,EAAD,CAAQ9G,QA3DG,SAAAgC,GACnBA,EAAE9B,iBACF4E,EAAIxB,aAAalF,EAAMmF,MAAO,CAC5BnE,QAAQ,IACPmB,MAAK,SAAAyE,GAOR,IAAwB7I,EANtBiB,QAAQC,IAAI,kBAAmB2H,GAMT7I,EAFPe,EAAMK,KAAKpB,GAI1BkE,IAAMI,IAAI,aAAetE,EAAK,eAAeoE,MAAK,SAAUG,GAC1DtD,QAAQC,IAAI,eAAgBqD,EAAaF,KAAKG,QAOlD,SAAiBC,GACf,IAD2B,IAAD,WACjBC,GACPR,IAAMI,IAAI,mBAAqBG,EAAUC,GAAG1E,GAAK,WAAWoE,MAAK,SAAUO,GACzE1D,QAAQC,IAAIyD,EAAQN,MACpBI,EAAUC,GAAGE,OAASD,EAAQN,KAE9BpD,QAAQC,IAAIH,EAAMc,QACd6C,IAAMD,EAAUD,OAAS,GAC3BrB,EAAS,CAAEhC,KAAMZ,EAAmBmB,QAAS+C,QAP1CC,EAAI,EAAGA,EAAID,EAAUD,OAAQE,IAAM,EAAnCA,GALPG,CAAQN,EAAaF,aA0CchF,UAAU,sBAAsBW,GAAG,eAAlE,YAGAiC,EAAMgB,OAEJ,qCADF,kBAAC,GAAD,CAAYoK,aAAcpL,EAAMmF,YCnD7BsG,OAtBf,SAAsBzL,GAElB,OACI,oCACI,yBAAK5C,UAAU,aACd4C,EAAML,QAAQ0E,KAAI,SAAApF,GAAG,OACtBA,EAAI+B,SAAWhB,EAAMgB,OAEjB,kBAAC,GAAD,iBACQhB,EADR,CAEImF,MAAOlG,EAAIlB,GACX6C,KAAM3B,EAAI2B,KACVG,KAAM9B,EAAI8B,KACVC,OAAQ/B,EAAI+B,UAEf,2C,oBC+CF0K,OAxDf,WAAsB,IAAD,EACStK,qBAAW1C,GADpB,mBACVI,EADU,KAYjB,OAZiB,KAEjBE,QAAQC,IAAI,YAAaH,GAWrB,6BACI,kBAAC,EAAD,MACA,yBAAK1B,UAAU,aACX,kBAAC,EAAD,MAEA,kBAACuO,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAKC,IAAI,GACT,wBAAI9N,GAAG,kBAAkBX,UAAU,oCAAnC,8BACA,yBAAKW,GAAG,gBACPe,EAAMU,WAAW6E,KAAI,SAAApF,GAAG,OACrB,kBAAC,GAAD,CACA4E,IAAK5E,EAAIlB,GACTA,GAAIkB,EAAIlB,GACRyN,KAAMvM,EAAI0B,aACVF,KAAMxB,EAAIwB,KACVd,QAASV,EAAIU,QACbqB,QAAQ,SAMZ,kBAAC4K,GAAA,EAAD,CAAKC,IAAI,GACT,wBAAI9N,GAAG,eAAeX,UAAU,oCAAhC,0BACA,yBAAKW,GAAG,aACPe,EAAMU,WAAW6E,KAAI,SAAApF,GAAG,OACrB,kBAAC,GAAD,CACA4E,IAAK5E,EAAIlB,GACTyN,KAAMvM,EAAI0B,aACVF,KAAMxB,EAAIwB,KACVd,QAASV,EAAIU,QACbqB,QAAQ,aC3BjB8K,OAxBf,SAAoB9L,GAEhB,OACI,oCACA,yBAAKjC,GAAG,cAAcX,UAAU,aAC5B,yBAAKA,UAAU,eACV4C,EAAM+L,SACP,yBAAK3O,UAAU,gBAAgBO,IAAKqC,EAAMgM,OAAQtO,IAAKsC,EAAM+L,WAC3D,yBAAK3O,UAAU,0BAA0BO,IAAI,wCAGnD,yBAAKP,UAAU,aACX,uBAAGA,UAAU,aAAaG,KAAMyC,EAAMiM,KAAK,4BAAKjM,EAAMkM,QAEtD,uBAAGC,MAAM,WAAWnM,EAAMoM,aAC1B,2BAAIpM,EAAMgM,QACV,2BAAIhM,EAAMqM,iBCiCXC,OA3Cf,WAAmB,IAAD,EAEYnL,IAFZ,mBAEPrC,EAFO,KAEAoC,EAFA,KAiBd,OAbAsF,qBAAU,WACNE,EAAI/B,UAAUxC,MAAK,SAAAC,GAEf,IAAI9C,EAAW8C,EAAKA,KAAK9C,SAEzB4B,EAAS,CAAEhC,KAAMf,EAAcmB,gBAChCuD,OAAM,SAAC0J,GACNvN,QAAQC,IAAIsN,QAEjB,IAEHvN,QAAQC,IAAI,eAAgBH,GAGxB,oCACD,kBAAC,EAAD,MACA,yBAAK1B,UAAU,aACV,wBAAIA,UAAU,yDAAyDW,GAAG,kBAA1E,sCACA,6BACJ,yBAAKX,UAAU,OACd0B,EAAMO,SAASgF,KAAI,SAAAhF,GAAQ,OAC5B,yBAAKjC,UAAU,qBACf,kBAAC,GAAD,CACA8O,MAAO7M,EAAS6M,MAChBF,OAAQ3M,EAAS2M,OACjBK,YAAaxL,KAAKxB,EAASgN,aAC3BD,YAAa/M,EAAS+M,YACtBH,IAAK5M,EAAS4M,IACdF,SAAU1M,EAASmN,qB,kBCdZC,OAvBf,SAAgBzM,GACZ,OACI,oCACA,yBAAK5C,UAAU,QACX,yBAAKA,UAAU,qBACX,yBAAK8F,MAAM,OACX,0BAAM9F,UAAU,yBAAhB,UADA,IACuD4C,EAAMY,MAE7D,yBAAKsC,MAAM,OACX,0BAAM9F,UAAU,yBAAhB,WAAuD4C,EAAMe,MAE7D,yBAAKmC,MAAM,OACX,0BAAM9F,UAAU,yBAAhB,aADA,IAC2D4C,EAAMgB,OAEjE,oCADA,6CCuBD0L,OAlCf,SAAiB1M,GAGb,OAFAhB,QAAQC,IAAI,gBAAiBe,GAIzB,kBAAC2M,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAMxP,UAAY,sCAAqCW,GAAG,YAC1D,kBAAC4O,GAAA,EAAU/O,OAAX,CAAkBiP,GAAID,KAAKrC,OAAQuC,SAAS,IAAI/O,GAAG,UAC9CiC,EAAM+M,UAEP,kBAACJ,GAAA,EAAU7O,SAAX,CAAoBgP,SAAS,KACzB,kBAACF,GAAA,EAAK1G,KAAN,KACI,6BAAK,sDAAL,IAA0ClG,EAAMS,MAChD,6BAAK,mEAAL,IAAuDT,EAAMQ,QAC7D,6BAAK,+DAAL,IAAmDR,EAAMO,WACzD,6BAAK,0CACAP,EAAML,QAAQ0E,KAAI,SAAApF,GAAG,OACtB,kBAAC,GAAD,CACI2B,KAAM3B,EAAI2B,KACVG,KAAM9B,EAAI8B,KACVC,OAAQ/B,EAAI+B,kBCY7BgM,OAhCf,WAA0B,IAAD,EAEK7L,IAFL,mBAEdrC,EAFc,KAMrB,OANqB,KAIrBE,QAAQC,IAAI,mBAAoBH,GAG5B,oCACI,kBAAC,EAAD,MACA,yBAAK1B,UAAU,mCAAmCW,GAAG,WACrD,uBAAGyN,KAAK,QACJ,wBAAIpO,UAAU,QAAd,kBACA,6BAEC0B,EAAMU,WAAW6E,KAAI,SAAA7E,GAAU,OAC5B,kBAAC,GAAD,CACIqE,IAAKrE,EAAWzB,GAChBgP,SAAUvN,EAAWmB,aACrBJ,UAAWf,EAAWe,UACtBC,OAAQhB,EAAWgB,OACnBC,KAAMjB,EAAWiB,KACjBd,QAASH,EAAWG,aAK1B,uBAAGpC,KAAK,QAAR,kBCgDH0P,OAxEf,WAAuB,IAAD,EAEQ7L,qBAAW1C,GAFnB,mBAEJwC,GAFI,WAIZgM,EAAY3L,mBACZ4L,EAAW5L,mBACX6L,EAAW7L,mBACXpB,EAAWoB,mBACXjB,EAAQiB,mBAgCd,OAEQ,6BACI,wBAAInE,UAAU,yBAAd,UACA,0BAAMA,UAAU,4CACZ,yBAAKA,UAAU,cACX,2BAAOoE,QAAQ,aAAf,cACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeW,GAAG,wBAAwB0D,mBAAiB,YAAYC,YAAY,qBAAqBC,IAAKuL,KAG9I,yBAAK9P,UAAU,cACX,2BAAOoE,QAAQ,YAAf,aACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeW,GAAG,wBAAwB2D,YAAY,oBAAoBC,IAAKwL,KAEhH,yBAAK/P,UAAU,cACX,2BAAOoE,QAAQ,YAAf,YACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeW,GAAG,wBAAwB2D,YAAY,mBAAmBC,IAAKyL,KAE/G,yBAAKhQ,UAAU,cACX,2BAAOoE,QAAQ,YAAf,YACA,2BAAOtC,KAAK,WAAW9B,UAAU,eAAeW,GAAG,wBAAwB2D,YAAY,mBAAmBC,IAAKxB,KAEnH,yBAAK/C,UAAU,cACX,2BAAOoE,QAAQ,SAAf,SACA,2BAAOtC,KAAK,OAAO9B,UAAU,eAAeW,GAAG,qBAAqB2D,YAAY,gBAAgBC,IAAKrB,KAEzG,4BAAQpB,KAAK,SAASnB,GAAG,cAAcX,UAAU,wBAAwBwE,QAxDtE,SAACC,GAChBA,EAAMC,iBAIN,IAAI1C,EAAU,CACVgB,UAAW8M,EAAUlL,QAAQjC,MAC7BM,SAAU8M,EAASnL,QAAQjC,MAC3BG,SAAUkN,EAASpL,QAAQjC,MAC3BI,SAAUA,EAAS6B,QAAQjC,MAC3BO,MAAOA,EAAM0B,QAAQjC,OAIzBsN,EAASzI,SAASxF,GACb+C,MAAK,SAAUC,GASxB,IAAwB1B,EARZ1B,QAAQC,IAAI,kBAAmBmD,GAC/BlB,EAAS,CAAEhC,KAAMd,EAAcgB,YAOnBsB,EALG0B,EAAKA,KAAKrE,GAMjCkE,IAAMI,IAAI,aAAe,CAAE3B,UAAW,eAAeyB,MAAK,SAACmL,GAAD,OAActO,QAAQC,IAAIqO,MAL5EC,OAAOC,SAASC,QAAQ,QACzB5K,OAAM,SAAAC,GAAG,OAAI9D,QAAQC,IAAI6D,QAmCpB,cCxDL4K,OAZf,WACI,OACI,oCACI,kBAAC,EAAD,MACA,yBAAKtQ,UAAU,wBACX,kBAAC,GAAD,SC4BDuQ,OAzBf,WAEE,OAEE,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,KAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7K,IACjC,kBAAC,IAAD,CAAO2K,OAAK,EAACC,KAAK,QAAQC,UAAW7K,IACrC,kBAAC,IAAD,CAAO2K,OAAK,EAACC,KAAK,kBAAkBC,UAAW3H,IAC/C,kBAAC,IAAD,CAAOyH,OAAK,EAACC,KAAK,aAAaC,UAAWpC,KAE1C,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,UAAUC,UAAWxB,KACvC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,iBAAiBC,UAAWC,KAC9C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,UAAUC,UAAWJ,UCzBjDM,IAASC,OAAO,kBAAC,GAAD,MAAS/E,SAASC,eAAe,W","file":"static/js/main.168056c4.chunk.js","sourcesContent":["import React from \"react\";\n// import { useStoreContext } from \"../../utils/GlobalState\";\nimport { Navbar, Nav, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom'\nfunction NavBeforeLogin() {\n\n  return (\n<Navbar className=\"nav-color\" expand=\"lg\">\n  <Navbar.Brand href=\"/home\" className=\"col\"><img height=\"70px\" width=\"130px\" src=\"medbuddylogo.png\" alt=\"logo\"/></Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav id=\"navpublic\">\n      <Link to = \"/health\" className=\"text-light col-md-11 offset-md-11 \" id=\"healthandwellness\">Health and Wellness</Link>\n      \n      <Link to =\"/signup\" className=\"text-light col-md-1 offset-md-1 \" id=\"signup\">Signup</Link>\n      </Nav>\n  </Navbar.Collapse>\n</Navbar>\n  );\n}\n\nexport default NavBeforeLogin;","import React from \"react\";\n\nfunction InfoCards() {\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <div id=\"border\" className=\"height card text-color float-left mr-4 ml-4  mb-4\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title font-weight-bold\">Track your medications</h5>\n                            <p className=\"card-text\">MedBuddy provides you with a user-friendly weekly calendar system that allows you to input when you need to take your medications.</p>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"col\">\n                    <div id=\"border\" className=\"height card text-color float-right mr-4 ml-4 mb-4\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title font-weight-bold\">View your medical history</h5>\n                            <p className=\"card-text\">MedBuddy keeps track of all the medications you have taken in a comprehensive data table that you can reference at any time.</p>\n                        </div>\n                    </div>\n\n                </div>\n\n            </div>\n\n\n         </div>\n            )\n        }\n        \nexport default InfoCards;","export const ADD_ARTICLES = \"ADD_ARTICLES\";\nexport const FIND_ALL_ROUTINES = \"FIND_ALL_ROUTINES\";\n\nexport const USER_SIGN_UP = \"USER_SIGN_UP\";\nexport const USER_LOG_IN = \"USER_LOG_IN\";\nexport const GRAB_USER_INFO = \"GRAB_USER_INFO\";\nexport const GRAB_USER_ROUTINE = \"GRAB_USER_ROUTINE\";\n\nexport const POST_ROUTINE = \"POST_ROUTINE\";\nexport const POST_LOG = \"POST_LOG\";\n\nexport const LOGGED_TO_TRUE = \"LOGGED_TO_TRUE\";\nexport const UPDATE_ROUTINE = \"UPDATE_ROUTINE\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\nexport const UPDATE_TIME = \"UPDATE_TIME\"","import React, { createContext, useReducer, useContext } from \"react\";\nimport {\n    ADD_ARTICLES,\n    USER_SIGN_UP,\n    GRAB_USER_INFO,\n    GRAB_USER_ROUTINE,\n    FIND_ALL_ROUTINES,\n    POST_LOG,\n    POST_ROUTINE,\n    LOGGED_TO_TRUE,\n    UPDATE_ROUTINE,\n    UPDATE_STATUS,\n    UPDATE_TIME\n} from \"./actions\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst reducer = (state, action) => {\n    console.log(\"DISPATCH\", action);\n    switch (action.type) {\n        case USER_SIGN_UP:\n            // console.log(action.newUser);\n            return { ...state, user: action.newUser };\n        case ADD_ARTICLES:\n            // console.log(action);\n            return { ...state, headline: action.articles };\n        case GRAB_USER_INFO:\n            //console.log(\"action\", action.transferMe)\n            return { ...state, user: action.transferMe };\n        case GRAB_USER_ROUTINE:\n            // console.log(\"action\", action.payload)\n            return { ...state, medroutine: action.payload };\n        //return { ...state, medroutine: action.payload, logged: true };\n        case ADD_ARTICLES:\n            // console.log(action);\n            return {\n                ...state,\n                headline: action.articles\n            };\n        case FIND_ALL_ROUTINES:\n            // console.log('findRoutine action', action)\n            return {\n                ...state,\n                medroutine: action.routines,\n            };\n\n        case POST_ROUTINE:\n            return {\n                ...state,\n                medroutine: action.medroutine\n            };\n\n        case POST_LOG:\n            return {\n                ...state,\n                medroutine: [action.MedLogs, ...state.medroutine]\n            };\n\n        case LOGGED_TO_TRUE:\n            return {\n                ...state,\n                logged: true\n            };\n        case UPDATE_ROUTINE:\n            return {\n                ...state,\n                medroutine: [...action.medroutine]\n            };\n        case UPDATE_STATUS:\n            console.log('UPDATES STATUS', action)\n            return {\n                ...state,\n                medroutine: [action.MedLogs]\n            }\n        case UPDATE_TIME:\n            return {\n                ...state,\n                medroutine : [...state.medroutine]\n                }\n\n\n        default: throw new Error(\"action doesnt exist\")\n    }\n}\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useReducer(reducer, {\n        logged: false,\n        headline: [],\n        user: {\n            id: 0,\n            username: \"\",\n            password: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            email: \"\"\n        },\n        medroutine: [{\n            id: 0,\n            datecount: 0,\n            dosage: 0,\n            dose: 0,\n            userid: 0,\n            medicinename: \"\",\n            MedLogs: [{\n                id: 0,\n                date: Date.now(),\n                time: 0,\n                status: false,\n                medroutineid: 0\n            }]\n        }]\n    })\n    return < Provider value={[state, dispatch]} {...props} />;\n}\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n}\n\nexport { StoreProvider, useStoreContext, StoreContext };\n","import React, { useContext, useRef, useState } from \"react\";\nimport axios from \"axios\";\nimport { GRAB_USER_INFO, GRAB_USER_ROUTINE, LOGGED_TO_TRUE } from \"../../../utils/actions\";\nimport { StoreContext } from \"../../../utils/GlobalState\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction LoginForm() {\n\n    const [state, dispatch] = useContext(StoreContext);\n    const [loggedState, setLoggedState] = useState(false);\n\n    console.log(\"current state\", state);\n    const username = useRef();\n    const password = useRef();\n    function loginClick(event) {\n        event.preventDefault();\n        var userData = {\n            username: username.current.value,\n            password: password.current.value\n        };\n        // if (!userData.email || !userData.password) {\n        //     return\n        // }\n        \n        loginUser(userData.username, userData.password);\n    }\n\n    function loginUser(username, password) {\n        axios.post(\"/api/login\", {\n            username: username,\n            password: password\n        })\n            .then(function (data) {\n                \n                //console.log(\"window replacement\");\n                //console.log(\"data from axios\", data.data);\n                let transferMe = data.data\n                dispatch({ type: GRAB_USER_INFO, transferMe })\n                //console.log(data.data)\n                getUserRoutine(data.data.id);\n            })\n            .catch(function (err) {\n                console.log(err)\n            })\n    }\n\n    function getUserRoutine(id) {\n        // console.log(currentUser)\n        axios.get(\"/api/user/\" + id + \"/medRoutine\").then(function (usersRoutine) {\n            console.log(\"user routine\", usersRoutine.data.length);\n            let transferMyRoutine = usersRoutine.data\n            //dispatch({ type: GRAB_USER_ROUTINE, transferMyRoutine })\n            if (usersRoutine.data.length === 0) {\n                dispatch({ type: LOGGED_TO_TRUE })\n            }else{\n                grabLog(usersRoutine.data);\n            }\n        })\n    }\n\n    function grabLog(routineid) {\n        for (let i = 0; i < routineid.length; i++) {\n            axios.get(\"/api/medRoutine/\" + routineid[i].id + \"/medLog\").then(function (results) {\n                console.log(results.data)\n                routineid[i].medlog = results.data\n                // console.log(\"myroutine\", myroutine)\n                console.log(state.logged)\n                if (i === routineid.length - 1) {\n                    dispatch({ type: GRAB_USER_ROUTINE, payload: routineid })\n                    dispatch({ type: LOGGED_TO_TRUE })\n                    \n                }\n            })\n        }\n\n    }\n\n    return (\n        state.logged ? (<Redirect to='/dashboard' />) :\n            <div id=\"border1\" className=\"card form1 float-left  text-color\">\n                <div className=\"card-body\">\n                    <form className=\"float-right mb-4\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\">Username</label>\n                            <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Your username...\" ref={username}>\n                            </input>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"exampleInputPassword1\">Password</label>\n                            <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Your password...\" ref={password}></input>\n                        </div>\n                        <button type=\"submit\" id=\"button-blue\" className=\"btn btn-light text-light\" onClick={loginClick} >Log In</button>\n                    </form>\n                </div>\n            </div>\n\n    )\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport LoginForm from \"../Login Form\";\n\nfunction Jumbotron() {\n    return (\n        <div id=\"jumbotron\" className=\"jumbotron jumbotron-fluid bg-img\">\n            <div id=\"contentcenter\" className=\"container\">\n                <div className=\"col-lg-6 col-sm-12 col-md-6 justify-content-center\">\n                    <div  className=\"row justify-content-center\">\n                            <h1 id=\"welcometo\" className=\"medbuddy font-weight-bold\">Welcome to</h1>\n                     \n                            <h1 id=\"medbuddy\" className=\"medbuddy font-weight-bold\">MedBuddy</h1>\n                    </div>\n                <div className=\"row justify-content-center\" id=\"login\">\n                        <LoginForm />\n                </div>\n\n                </div>\n         \n            </div>\n\n        </div>\n\n    )\n}\n\nexport default Jumbotron;","import React from \"react\";\nimport NavBeforeLogin from \"../components/Home/NavBar (public)/index\"\nimport InfoCards from \"../components/Home/Information cards/index\";\nimport Jumbotron from \"../components/Home/Jumbotron/index\"\n\nfunction Home() {\n    return (\n        <>\n            <NavBeforeLogin />\n            <Jumbotron /> \n            <div class=\"container\">\n               <InfoCards /> \n            </div>\n            \n        </>\n\n    );\n};\n\nexport default Home;\n\n","import React from \"react\";\nimport { Link } from 'react-router-dom'\n\nimport { Navbar, Nav} from 'react-bootstrap';\n\n\nfunction NavAfterLogin() {\n\n  return (\n\n\n  <Navbar  className=\"nav-color\" expand=\"lg\">\n    <Link to = \"/dashboard\" className=\"col\"><img height=\"60px\" width=\"120px\" src=\"medbuddylogo.png\" alt=\"logo\"/></Link>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\" id=\"nav-loging\"> \n          <Link to = \"/dashboard\" className=\"text-light col\">Dashboard</Link>   \n          <Link to =\"/mymedications\" className=\"text-light col-md-auto\">My Medications</Link>  \n          <Link to = \"/addmedications\"className=\"text-light col-md-auto\" >Add Medications</Link>               \n    </Nav>\n      <Nav.Link href = \"/\" className=\"text-light logout mr-3 col-md-auto\" id=\"logout\">Logout</Nav.Link> \n  </Navbar.Collapse> \n     \n</Navbar>\n    \n  )\n\n}\n\nexport default NavAfterLogin;","import React, { useState } from \"react\";\nimport _ from \"lodash\";\n\nfunction TimeDives(props) {\n    // const [timeState, setTimeState] = useState({})\n\n    console.log(\"selected\", props)\n    let countNum = {\n        0: \"First\",\n        1: \"Second\",\n        2: \"Third\",\n        3: \"Fourth\"\n    }\n\n    function handleSelect(e) {\n        e.preventDefault()\n        props.handleSelect({ key: e.target.id, val: e.target.value })\n        //         console.log(\"SELECTING...\")\n        //         console.log(e.target.value )\n        //         props.handleSubmit({...timeState, [e.target.id]:e.target.value})\n        // setTimeState({...timeState, [e.target.id]:e.target.value})\n        //     // function handleSelectMinute(e) {\n        //     //     console.log(\"SELECTING...\")\n        //     //     console.log(e.target.value + \"minutes\")\n        //     //     setTimeState({...timeState, [e.target.id]:e.target.value})\n        //     // }\n        //     // function handleSelectAMPM(e) {\n        //     //     console.log(\"SELECTING...\")\n        //     //     console.log(e.target.value)\n        //     // }\n        //     console.log(timeState)\n    }\n\n    let timesList = [];\n    _.times(props.selectValue, (i) => {\n        timesList.push(\n            i);\n    })\n\n    return (\n        timesList.map((item, i) => {\n            return <div key={i}>\n                <br />\n                <p> {countNum[i]} Time </p>\n                <hr />\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <select className=\"form-control\" onChange={handleSelect} id={\"hour\" + i}>\n                            <option value=\"\" disabled selected hidden>HOUR</option>\n                            <option value=\"1\">1</option>\n                            <option value=\"2\">2</option>\n                            <option value=\"3\">3</option>\n                            <option value=\"4\">4</option>\n                            <option value=\"5\">5</option>\n                            <option value=\"6\">6</option>\n                            <option value=\"7\">7</option>\n                            <option value=\"8\">8</option>\n                            <option value=\"9\">9</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"12\">12</option>\n                        </select>\n                    </div>\n                    <div className=\"col\">\n                        <select className=\"form-control\" onChange={handleSelect} id={'minute' + i}>\n                            <option value=\"\" disabled selected hidden>MINUTE</option>\n\n                            <option value=\"00\">00</option>\n                            <option value=\"15\">15</option>\n                            <option value=\"30\">30</option>\n                            <option value=\"45\">45</option>\n                        </select>\n                    </div>\n                    <div className=\"col\">\n                        <select className=\"form-control\" onChange={handleSelect} id={'ampm' + i}>\n                            <option value=\"\" disabled selected hidden>AM/PM</option>\n\n                            <option value=\"AM\">AM</option>\n                            <option value=\"PM\">PM</option>\n                        </select>\n                    </div>\n                    <br />\n                </div>\n            </div>\n        })\n    )\n\n\n}\nexport default TimeDives;\n\n\n","import axios from \"axios\";\n\nexport default {\n    // API call to get top headlines for Health Page\n    getNews: function () {\n        return axios.get(\"https://newsapi.org/v2/top-headlines?country=us&category=health&apiKey=4499ded633c940b7885aca83297927c8\"); \n    },\n\n    saveUser : function(newUser)\n    {\n        return axios.post(\"/api/user\", newUser)\n    },\n\n    loginUser : function (loginDetails)\n    {\n        return axios.post(\"/api/user/login\", loginDetails)\n    },\n\n    getAllRoutines: function (id) {\n        return axios.get(\"/api/user/\" + id + \"/medRoutine\")\n    },\n\n    postMedroutine: function (id, medRoutineData) {\n        return axios.post(\"/api/user/\" + id + \"/medRoutine\", medRoutineData)\n    },\n\n    postMedlog: function (id, log) {\n        return axios.post(\"/api/medRoutine/\" + id + \"/medLog/\", log)\n    },\n\n    updateStatus: function (logId, status) {\n        return axios.put(\"/api/medLog/\" + logId, status)\n    }\n\n};\n","import React, {useState} from \"react\";\nimport {Toast, Button, Alert } from \"react-bootstrap\";\n\n\nfunction ToastMeds() {\n    const [show, setShow] = useState(false);\n  \n    return (\n        <>\n\n          <Toast onClose={() => setShow(false)} show={show} delay={2000} autohide \n            style={{\n                position: 'fixed',\n                top: 0,\n                right: 0,\n                variant: \"success\"\n                \n           }}>\n   \n                <Alert variant=\"success\" id=\"toast-alert\">\n                {/* <Toast.Header>\n                \n                <strong className=\"mr-auto\">Add Medicatoin</strong>\n                \n                </Toast.Header> */}\n                <Toast.Body>Added Your Medication to Dashboard</Toast.Body>\n                </Alert>\n          </Toast>\n        \n          <button  id=\"bluebtn-addmed\" className=\"btn mt-2 mb-4\" onClick={() => setShow(true)}>Add Medication</button>\n          \n          </>\n    );\n  }\n  \n\n  \n  export default ToastMeds;","import React, { useState, useEffect, useRef } from \"react\";\nimport TimeDives from \"../StartTimes/index\";\nimport { useStoreContext } from \"../../../utils/GlobalState\";\nimport API from \"../../../utils/API\";\nimport { POST_ROUTINE, GRAB_USER_ROUTINE, FIND_ALL_ROUTINES, UPDATE_ROUTINE } from \"../../../utils/actions\";\nimport { Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport ToastMeds from \"../Toast/index\";\n\nfunction MedicationForm() {\n    const [userState, setUserState] = useState({\n        selectValue: \"1\",\n    });\n\n\n\n    const medicinename = useRef();\n    const dose = useRef();\n    // i need this \n    const date = useRef();\n    const datecount = useRef();\n    // ---- //\n    const dosage = useRef();\n\n    const [state, dispatch] = useStoreContext();\n    const [timeState, setTimeState] = useState({});\n\n\n    console.log(\"initial \" + userState.selectValue)\n    let handleChange = (e) => {\n        setUserState({ selectValue: e.target.value });\n    }\n\n    function handleSelect(data) {\n        console.log(\"SELECTING...\")\n        setTimeState({ ...timeState, [data.key]: data.val })\n        // function handleSelectMinute(e) {\n        //     console.log(\"SELECTING...\")\n        //     console.log(e.target.value + \"minutes\")\n        //     setTimeState({...timeState, [e.target.id]:e.target.value})\n        // }\n        // function handleSelectAMPM(e) {\n        //     console.log(\"SELECTING...\")\n        //     console.log(e.target.value)\n        // }\n        //console.log(timeState)\n    }\n\n    useEffect(() => {\n        console.log(\"TIMESTATE\", timeState)\n\n        // if(timeState.hour0)\n        // {\n        //     alert(\" you have 1 log - insert save code here\")\n        // } else\n        // if(timeState.hour1)\n        // {\n        //     alert(\" you have 2 logs - insert save code here\")\n        // } else\n        // if(timeState.hour2)\n        // {\n        //     alert(\" you have 3 logs - insert save code here\")\n        // } else\n        // if(timeState.hour3)\n        // {\n        //     alert(\" you have 4 logs - insert save code here\")\n        // }\n\n\n        // if (timeState.hour3) {\n        //     console.log(\"useeffect you have 4 logs - insert save code here\")\n        // } else if (timeState.hour2) {\n        //     console.log(\"useeffect you have 3 logs - insert save code here\")\n        // } else if (timeState.hour1) {\n        //     console.log(\"useeffect you have 2 logs - insert save code here\")\n        // } else if (timeState.hour0) {\n        //     console.log(\"useeffect you have 1 log - insert save code here\")\n        // }\n\n    }, [timeState])\n\n    const handleSubmit = (e, data) => {\n        e.preventDefault();\n        //console.log('DOSAGE', dosage.current.value)\n        submitAPI();\n\n    }\n\n    const submitAPI = () => {\n\n        API.postMedroutine(state.user.id, {\n\n            dose: dose.current.value,\n            date: date.current.value,\n            datecount: datecount.current.value,\n            dosage: dosage.current.value,\n            UserId: state.user.id,\n            medicinename: medicinename.current.value\n        }).then(result => {\n            console.log(\"POSTMEDROUTINE\", result)\n            dispatch({\n                type: POST_ROUTINE,\n                medroutine: result\n            });\n            // dispatch({ type: UPDATE_ROUTINE, medroutine : result})\n\n            // function hrChange(hrConverted, AMPM) {\n            //     //convert PM to military time\n            //     if(AMPM === \"PM\")\n            //     {\n            //         hourcomputation0 = parseInt(hourcomputation0) + 12;\n            //         time0 = hourcomputation0+\":\"+timeState.minute0+\":\"+\"00\";\n            //         console.log(\"time pm\", time0);\n\n            //     } else if(AMPM === \"AM\")\n            //     {\n            //         time0 = hourcomputation0+\":\"+timeState.minute0+\":\"+\"00\";\n            //         console.log(\"time am\", time0);\n            //     }\n            // }\n\n\n            if (timeState.hour3) {\n                console.log(\"you have 4 logs - insert save code here\")\n\n                let hourcomputation0 = timeState.hour0;\n                let time0 = \"\";\n\n                if (timeState.ampm0 === \"PM\") {\n                    hourcomputation0 = parseInt(hourcomputation0) + 12;\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time pm\", time0);\n\n                } else if (timeState.ampm0 === \"AM\") {\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time am\", time0);\n                }\n                let myloop = datecount.current.value;\n                let deconstructMyDateYEAR = date.current.value.slice(0, 4);\n                let deconstructMyDateMONTH = date.current.value.slice(5, 7);\n                let deconstructMyDateDAY = date.current.value.slice(8, 11);\n                let baseday = parseInt(deconstructMyDateDAY);\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time0,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 0 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation1 = timeState.hour1;\n                let time1 = \"\";\n\n                if (timeState.ampm1 === \"PM\") {\n                    hourcomputation1 = parseInt(hourcomputation1) + 12;\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time pm\", time1);\n\n                } else if (timeState.ampm1 === \"AM\") {\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time am\", time1);\n                }\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time1,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 1 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation2 = timeState.hour2;\n                let time2 = \"\";\n\n                if (timeState.ampm2 === \"PM\") {\n                    hourcomputation2 = parseInt(hourcomputation2) + 12;\n                    time2 = hourcomputation2 + \":\" + timeState.minute2 + \":\" + \"00\";\n                    console.log(\"time pm\", time2);\n\n                } else if (timeState.ampm2 === \"AM\") {\n                    time2 = hourcomputation2 + \":\" + timeState.minute2 + \":\" + \"00\";\n                    console.log(\"time am\", time2);\n                }\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time2,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 2 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation3 = timeState.hour3;\n                let time3 = \"\";\n\n                if (timeState.ampm3 === \"PM\") {\n                    hourcomputation3 = parseInt(hourcomputation3) + 12;\n                    time3 = hourcomputation3 + \":\" + timeState.minute3 + \":\" + \"00\";\n                    console.log(\"time pm\", time3);\n\n                } else if (timeState.ampm3 === \"AM\") {\n                    time3 = hourcomputation3 + \":\" + timeState.minute3 + \":\" + \"00\";\n                    console.log(\"time am\", time3);\n                }\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time3,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 3 SAVED!!!!\"))\n                }\n            } else if (timeState.hour2) {\n                console.log(\"you have 3 logs - insert save code here\")\n\n                let hourcomputation0 = timeState.hour0;\n                let time0 = \"\";\n\n                if (timeState.ampm0 === \"PM\") {\n                    hourcomputation0 = parseInt(hourcomputation0) + 12;\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time pm\", time0);\n\n                } else if (timeState.ampm0 === \"AM\") {\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time am\", time0);\n                }\n                let myloop = datecount.current.value;\n                let deconstructMyDateYEAR = date.current.value.slice(0, 4);\n                let deconstructMyDateMONTH = date.current.value.slice(5, 7);\n                let deconstructMyDateDAY = date.current.value.slice(8, 11);\n                let baseday = parseInt(deconstructMyDateDAY);\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time0,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 0 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation1 = timeState.hour1;\n                let time1 = \"\";\n\n                if (timeState.ampm1 === \"PM\") {\n                    hourcomputation1 = parseInt(hourcomputation1) + 12;\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time pm\", time1);\n\n                } else if (timeState.ampm1 === \"AM\") {\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time am\", time1);\n                }\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time1,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 1 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation2 = timeState.hour2;\n                let time2 = \"\";\n\n                if (timeState.ampm2 === \"PM\") {\n                    hourcomputation2 = parseInt(hourcomputation2) + 12;\n                    time2 = hourcomputation2 + \":\" + timeState.minute2 + \":\" + \"00\";\n                    console.log(\"time pm\", time2);\n\n                } else if (timeState.ampm2 === \"AM\") {\n                    time2 = hourcomputation2 + \":\" + timeState.minute2 + \":\" + \"00\";\n                    console.log(\"time am\", time2);\n                }\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time2,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 2 SAVED!!!!\"))\n                }\n            } else if (timeState.hour1) {\n\n                console.log(\"you have 2 logs - insert save code here\")\n                let hourcomputation0 = timeState.hour0;\n                let time0 = \"\";\n\n                if (timeState.ampm0 === \"PM\") {\n                    hourcomputation0 = parseInt(hourcomputation0) + 12;\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time pm\", time0);\n\n                } else if (timeState.ampm0 === \"AM\") {\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time am\", time0);\n                }\n\n                let myloop = datecount.current.value;\n                let deconstructMyDateYEAR = date.current.value.slice(0, 4);\n                let deconstructMyDateMONTH = date.current.value.slice(5, 7);\n                let deconstructMyDateDAY = date.current.value.slice(8, 11);\n                let baseday = parseInt(deconstructMyDateDAY);\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time0,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 0 SAVED!!!!\"))\n                }\n                // ---------------------------------------------------- //\n\n                let hourcomputation1 = timeState.hour1;\n                let time1 = \"\";\n\n                if (timeState.ampm1 === \"PM\") {\n                    hourcomputation1 = parseInt(hourcomputation1) + 12;\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time pm\", time1);\n\n                } else if (timeState.ampm1 === \"AM\") {\n                    time1 = hourcomputation1 + \":\" + timeState.minute1 + \":\" + \"00\";\n                    console.log(\"time am\", time1);\n                }\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    API.postMedlog(result.data.id,\n                        {\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time1,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 1 SAVED!!!!\"))\n                }\n\n            } else if (timeState.hour0) {\n                console.log(\"you have 1 log - insert save code here\")\n                let hourcomputation0 = timeState.hour0;\n                let time0 = \"\";\n\n                if (timeState.ampm0 === \"PM\") {\n                    hourcomputation0 = parseInt(hourcomputation0) + 12;\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time pm\", time0);\n\n                } else if (timeState.ampm0 === \"AM\") {\n                    time0 = hourcomputation0 + \":\" + timeState.minute0 + \":\" + \"00\";\n                    console.log(\"time am\", time0);\n                }\n\n                let myloop = datecount.current.value;\n                let deconstructMyDateYEAR = date.current.value.slice(0, 4);\n                let deconstructMyDateMONTH = date.current.value.slice(5, 7);\n                let deconstructMyDateDAY = date.current.value.slice(8, 11);\n                let baseday = parseInt(deconstructMyDateDAY);\n\n                for (let i = 0; i < myloop; i++) {\n                    let daytobesave = baseday + i\n                    // let parseDay = parseInt(deconstructMyDateDAY);\n                    // let mydate = deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + parseDay +1 ;\n                    API.postMedlog(result.data.id,\n                        {\n\n                            //need to figure out how to rearrange the date format\n                            date: deconstructMyDateYEAR + \"/\" + deconstructMyDateMONTH + \"/\" + daytobesave,\n                            time: time0,\n                            status: false\n                        }).then(console.log(\"BOOM!!!! LOG 0 SAVED!!!!\"))\n                }\n            }\n\n            API.getAllRoutines(state.user.id)\n                .then(results => {\n                    console.log(\"run me\", results.data)\n                    let routines = results.data;\n                    console.log(\"hey! this is your updated routines\", routines)\n                    // dispatch({ type: FIND_ALL_ROUTINES, payload: routines })\n                    dispatch({ type: UPDATE_ROUTINE, medroutine: routines })\n\n                    //console.log('CURRENT STATE', state)\n                }).then(() => {\n                    console.log(\"state after then then\", state);\n                });\n        })\n            .catch(err => console.log(err));\n\n    }\n\n\n    return (\n        <form>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlInput1\">Medication Name</label>\n                <input type=\"text\" className=\"form-control\" required ref={medicinename} placeholder=\"Add the name of your medication...\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlInput1\">Dose</label>\n                <input type=\"text\" className=\"form-control\" required ref={dose} placeholder=\"1 tablet...\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlInput1\">When should you start to take it?</label>\n                <input type=\"text\" className=\"form-control\" required ref={date} placeholder=\"YYYY/MM/DD\" />\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlInput1\">How many consecutive days do you need to take it?</label>\n                <input type=\"text\" className=\"form-control\" required ref={datecount} placeholder=\"10\" />\n            </div>\n\n            {/* <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlSelect1\">How often should you take it?</label>\n                <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n                    <option>everyday</option>\n                    <option>every other day</option>\n                </select>\n            </div> */}\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlSelect1\">How many times a day do you need to take it?</label>\n                <select\n                    value={userState.selectValue}\n                    onChange={handleChange}\n                    className=\"form-control\" ref={dosage} id=\"timesaday\">\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label htmlFor=\"exampleFormControlInput1\">What time do you want to start taking it?</label>\n\n                <TimeDives handleSelect={handleSelect} selectValue={userState.selectValue} />\n                {console.log(\"secondory \", userState.selectValue)}\n\n            </div>\n            <Button id=\"addmed\" className= \"form-control\" onClick={handleSubmit}> <ToastMeds  >Add Medication </ToastMeds></Button>\n        </ form >\n\n        // <Form>\n        //     <Form.Group controlId=\"exampleForm.ControlInput1\">\"\n        //         <Form.Label>Medication Name</Form.Label>\n        //         <Form.Control type=\"text\" required ref={medicinename} placeholder=\"Add the name of your medication...\" />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>Dose</Form.Label>\n        //         <Form.Control type=\"text\" required ref={dose} placeholder=\"1 tablet...\" />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>When should you start to take it?</Form.Label>\n        //         <Form.Control type=\"text\" required ref={date} placeholder=\"YYYY/MM/DD\" />\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>How many consecutive days do you need to take it?</Form.Label>\n        //         <Form.Control type=\"text\" required ref={datecount} placeholder=\"10\" />\n        //     </Form.Group>\n        //     {/* <div className=\"form-group\">\n        //         <label htmlFor=\"exampleFormControlSelect1\">How often should you take it?</label>\n        //         <select className=\"form-control\" id=\"exampleFormControlSelect1\">\n        //             <option>everyday</option>\n        //             <option>every other day</option>\n        //         </select>\n        //     </div> */}\n        //     <Form.Group>\n        //         <Form.Label>How many times a day do you need to take it?</Form.Label>\n        //         <Form.Control as=\"select\"\n        //             value={userState.selectValue}\n        //             onChange={handleChange}\n        //             className=\"form-control\" ref={dosage} id=\"timesaday\">\n        //             <option value=\"1\">1</option>\n        //             <option value=\"2\">2</option>\n        //             <option value=\"3\">3</option>\n        //             <option value=\"4\">4</option>\n        //         </Form.Control>\n        //     </Form.Group>\n        //     <Form.Group>\n        //         <Form.Label>What time do you want to start taking it?</Form.Label>\n        //         <TimeDives handleSelect={handleSelect} selectValue={userState.selectValue} />\n        //         {console.log(\"secondory \", userState.selectValue)}\n        //     </Form.Group>\n        //     <Button Click={handleSubmit}> <ToastMeds>Add Medication </ToastMeds></Button>\n        // </Form>\n\n\n    )\n}\n\n\n\nexport default MedicationForm;","import React from \"react\";\nimport NavAfterLogin from \"../components/Nav (afterlogin)/index\";\nimport MedicationForm from \"../components/Add Medications/Add Meds Form/index\"\n\nfunction AddMedications() {\n    return (\n        <>\n            <NavAfterLogin />             \n            <div className=\"container text-color\">\n                <div className=\"mx-auto col-lg-6 col-md-6\">\n                    <h2 className=\"mt-4 text-center mb-2 font-weight-bold\">Add a medication</h2>\n                    <MedicationForm />\n\n\n                </div>\n                \n            </div>\n        \n        </>\n    )\n}\n\nexport default AddMedications;","import React, { useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nvar moment = require('moment');\nmoment().format();\nlet updateHandle;\n\n\n\nfunction clickedDay(event) {\n    // console.log(event.target)\n    let day = parseInt(event.target.dataset['day'])\n    // console.log(\"day\", day)\n\n    document.getElementById(\"clickedday\")\n        .innerHTML = moment().add(day, 'days').format('dddd MMMM Do YYYY')\n}\n\nvar update = function () {\n    document.getElementById(\"currenttime\")\n        .innerHTML = \"Today: \" + moment().format('lll');\n}\n\n\nfunction Calendarbar() {\n    useEffect(() => {\n        updateHandle = setInterval(update, 1000);\n        return () => {\n            clearInterval(updateHandle);\n        }\n    }, [])\n\n\n    return (\n        <div>\n            <div className=\"row container mx-auto\">\n                <table className=\"table text-color justify-content-center\">\n                    <thead>\n                        <tr>\n                            <th id=\"currenttime\" scope=\"col\"></th>\n                            {/* <th id=\"clickedday\" scope=\"col\"></th> */}\n                        </tr>\n\n                    </thead>\n                </table>\n\n            </div>\n\n            <div className=\"row\">\n                <table className=\"table text-color text-center\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">{moment().format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(1, 'days').format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(2, 'days').format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(3, 'days').format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(4, 'days').format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(5, 'days').format('ddd')}</th>\n                            <th scope=\"col\">{moment().add(6, 'days').format('ddd')}</th>\n                        </tr>\n                        <tr>\n                            <td data-day=\"0\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(0, 'days').format(\"D\")}</td>\n                            <td data-day=\"1\" onClick={clickedDay} >{moment().add(1, 'days').format(\"D\")}</td>\n                            <td data-day=\"2\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(2, 'days').format(\"D\")}</td>\n                            <td data-day=\"3\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(3, 'days').format(\"D\")}</td>\n                            <td data-day=\"4\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(4, 'days').format(\"D\")}</td>\n                            <td data-day=\"5\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(5, 'days').format(\"D\")}</td>\n                            <td data-day=\"6\" onClick={clickedDay} className=\"calendarbartext\" >{moment().add(6, 'days').format(\"D\")}</td>\n                        </tr>\n\n                    </thead>\n                </table>\n                <h2 className=\"text-center text-color mx-auto mt-4 mb-4\"><div id=\"clickedday\"></div></h2>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Calendarbar;","import React, { useState, useContext } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\nimport { StoreContext } from '../../../utils/GlobalState';\nimport axios from 'axios';\nimport API from \"../../../utils/API\";\nimport { UPDATE_TIME, GRAB_USER_ROUTINE } from \"../../../utils/actions\";\n\n\nfunction RescheduleModal(props) {\n\n  const [state, dispatch] = useContext(StoreContext);\n  console.log(\"reshed\", state);\n  //console.log(\"passdown\", props.passdown);\n\n  const [timeUpdate, setTimeUpdate] = useState({\n    HR: \"\",\n    MN: \"\",\n    AMPM: \"\"\n  });\n\n  // useEffect(()=>{\n  //   console.log(timeUpdate)\n  // },[timeUpdate])\n\n  function timeMeX(e) {\n    e.preventDefault();\n    timeUpdate.HR = e.target.value\n    //console.log(timeUpdate);\n    setTimeUpdate(timeUpdate);\n    console.log(timeUpdate)\n  }\n  function timeMeY(e) {\n    e.preventDefault();\n    timeUpdate.MN = e.target.value;\n    //console.log(timeUpdate);\n    setTimeUpdate(timeUpdate);\n    console.log(timeUpdate)\n  }\n  function timeMeZ(e) {\n    e.preventDefault();\n    //console.log(e.target);\n    timeUpdate.AMPM = e.target.value;\n    //console.log(timeUpdate);\n    setTimeUpdate(timeUpdate);\n    console.log(timeUpdate)\n  }\n\n  function updateTime(e) {\n    e.preventDefault();\n    let constructTime = \"\";\n    let hrs = \"\";\n    let medLogId = e.target.id;\n\n\n    if (timeUpdate.AMPM === \"PM\") {\n      hrs = parseInt(timeUpdate.HR) + 12;\n      constructTime = hrs + \":\" + timeUpdate.MN + \":00\";\n      console.log(\"newtime\", constructTime);\n      API.updateStatus(medLogId, {\n        time: constructTime\n      }).then(result => {\n        console.log(result)\n        // alert(\"time update \", result);\n        // console.log(result);\n        //dispatch ({type: UPDATE_TIME })\n        getUserRoutine(state.user.id)\n      })\n    } else {\n      constructTime = timeUpdate.HR + \":\" + timeUpdate.MN + \":00\";\n      console.log(constructTime);\n      API.updateStatus(medLogId, {\n        time: constructTime\n      }).then(result => {\n        //alert(\"time update \", constructTime);\n        console.log(result)\n        //dispatch ({})\n        getUserRoutine(state.user.id)\n      })\n    }\n\n    function getUserRoutine(id) {\n      // console.log(currentUser)\n      axios.get(\"/api/user/\" + id + \"/medRoutine\").then(function (usersRoutine) {\n        console.log(\"user routine\", usersRoutine.data.length);\n        //let transferMyRoutine = usersRoutine.data\n        //dispatch({ type: GRAB_USER_ROUTINE, transferMyRoutine })\n        grabLog(usersRoutine.data);\n\n      })\n    }\n    function grabLog(routineid) {\n      for (let i = 0; i < routineid.length; i++) {\n        axios.get(\"/api/medRoutine/\" + routineid[i].id + \"/medLog\").then(function (results) {\n          console.log(results.data)\n          routineid[i].medlog = results.data\n          // console.log(\"myroutine\", myroutine)\n          console.log(state.logged)\n          if (i === routineid.length - 1) {\n            dispatch({ type: GRAB_USER_ROUTINE, payload: routineid })\n          }\n        })\n      }\n    }\n\n  }\n\n  return (\n    <Modal\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title className=\"text-color\" id=\"contained-modal-title-vcenter\">\n          Reschedule Time \n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <h4 className=\"text-color\">What time would you like to reschedule?</h4>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={timeMeX} id={\"HOUR\"}>\n              <option value=\"\" disabled selected hidden>HOUR</option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n              <option>6</option>\n              <option>7</option>\n              <option>8</option>\n              <option>9</option>\n              <option>10</option>\n              <option>11</option>\n              <option>12</option>\n            </select>\n          </div>\n          <div className=\"col-4\">\n            <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={timeMeY} id={\"MINUTES\"}>\n              <option value=\"\" disabled selected hidden>MINUTE</option>\n              <option>00</option>\n              <option>15</option>\n              <option>30</option>\n              <option>45</option>\n            </select>\n          </div>\n          <div className=\"col-4\">\n            <select className=\"form-control\" id=\"exampleFormControlSelect1\" onChange={timeMeZ} id={\"AMPM\"}>\n              <option value=\"\" disabled selected hidden>AM/PM</option>\n              <option>AM</option>\n              <option>PM</option>\n            </select>\n          </div>\n          <br />\n        </div>\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"button-blue\" onClick={props.onHide, updateTime} id={props.passdown} >Reschedule </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\n\nfunction Reschedule(props) {\n  const [modalShow, setModalShow] = React.useState(false);\n\n  console.log(\"reschedule\", props.transferdown);\n\n\n  return (\n    <ButtonToolbar>\n      <Button className=\"mr-2 ml-2 complete1\" id=\"button-blue\" onClick={() => setModalShow(true)} >\n        Reschedule \n      </Button>\n\n      <RescheduleModal\n        passdown={props.transferdown}\n        details={props}\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </ButtonToolbar>\n  );\n}\n\nexport default Reschedule;\n","import React, { useContext } from \"react\";\nimport Reschedule from \"../Reschedule modal/index\";\nimport { Button } from \"react-bootstrap\";\nimport API from \"../../../utils/API\";\nimport { UPDATE_STATUS, UPDATE_ROUTINE, GRAB_USER_ROUTINE } from \"../../../utils/actions\";\nimport { StoreContext } from \"../../../utils/GlobalState\";\nimport { tsPropertySignature } from \"@babel/types\";\nimport axios from 'axios';\n\nfunction MedsCard(props) {\n  console.log(\"medscard\", props.logId)\n  const [state, dispatch] = useContext(StoreContext);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    API.updateStatus(props.logId, {\n      status: true\n    }).then(result => {\n      console.log(\"COMPLETE BUTTON\", result)\n      // dispatch({\n      //     type: UPDATE_STATUS,\n      //     medroutine: result\n      getUserRoutine(state.user.id)\n    });\n    function getUserRoutine(id) {\n      // console.log(currentUser)\n      axios.get(\"/api/user/\" + id + \"/medRoutine\").then(function (usersRoutine) {\n        console.log(\"user routine\", usersRoutine.data.length);\n        //let transferMyRoutine = usersRoutine.data\n        //dispatch({ type: GRAB_USER_ROUTINE, transferMyRoutine })\n        grabLog(usersRoutine.data);\n\n      })\n    }\n    function grabLog(routineid) {\n      for (let i = 0; i < routineid.length; i++) {\n        axios.get(\"/api/medRoutine/\" + routineid[i].id + \"/medLog\").then(function (results) {\n          console.log(results.data)\n          routineid[i].medlog = results.data\n          // console.log(\"myroutine\", myroutine)\n          console.log(state.logged)\n          if (i === routineid.length - 1) {\n            dispatch({ type: GRAB_USER_ROUTINE, payload: routineid })\n          }\n        })\n      }\n    }\n    // API.getAllRoutines(state.user.id)\n    // .then(results => {\n    //     console.log(\"run me\", results.data)\n    //     let routines = results.data;\n    //     console.log(\"hey! this is your updated routines\", routines)\n    //     // dispatch({ type: FIND_ALL_ROUTINES, payload: routines })\n    //     dispatch({ type: UPDATE_ROUTINE, medroutine: routines })\n\n    //     //console.log('CURRENT STATE', state)\n    // }).then(() => {\n    //     console.log(\"state after then then\", state);\n    // });\n    // })\n  };\n\n  return (\n    <div className=\"card mt-4 text-color\">\n      <div id=\"medsihavetotakecard\" className=\"card-body\">\n        <h1 className=\"card-title text-center\">{props.date}</h1>\n        <h4 id=\"time\" className=\"card-title text-center\">{props.time}</h4>\n        <h5 id=\"drugname\" className=\"text-center\">{props.name} </h5>\n        <h5 id=\"drugcon\" className=\"text-center\">{props.dose}</h5>\n        <div className=\"row justify-content-center\">\n\n          {!props.status ?\n            <Button onClick={handleSubmit} className=\"mr-2 ml-2 complete1\" id=\"button-blue\" >Complete</Button>\n            : <></>\n          }\n          {!props.status ?\n            <Reschedule transferdown={props.logId} />\n            : <></>\n          }\n        </div>\n      </div>\n    </div>\n\n  )\n}\n\nexport default MedsCard;","import React from \"react\";\nimport MedsCard from \"../MedsCard/index\";\n\nfunction Medsnottaken(props){\n\n    return(  \n        <>\n            <div className=\"container\">\n            {props.MedLogs.map(log =>\n            log.status === props.status ?\n\n                <MedsCard\n                    {...props}\n                    logId={log.id}\n                    date={log.date}\n                    time={log.time}\n                    status={log.status}\n                />\n               : <></> )}\n            </div>       \n        </>\n            \n    )\n}\n\nexport default Medsnottaken;","import React, { useContext } from \"react\";\nimport NavAfterLogin from \"../components/Nav (afterlogin)/index\";\nimport Calendarbar from \"../components/Dashboard/Calendarbar\";\nimport Medsnottaken from \"../components/Dashboard/Medsnottaken/index\";\nimport { Row, Col } from 'react-bootstrap';\nimport { StoreContext } from './../utils/GlobalState';\n// import { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\n\nfunction Dashboard() {\n    const [state, dispatch] = useContext(StoreContext);\n    console.log(\"dashboard\", state)\n    \n\n//     useEffect(()=>{\n// const user = localStorage.getItem('user')? JSON.parse(localStorage.getItem('user')) : null\n// if(user){\n\n// }\n//     },[])\n\n    return (\n        <div>\n            <NavAfterLogin />\n            <div className=\"container\">\n                <Calendarbar></Calendarbar>\n               \n                <Row>\n                    <Col lg={true} >\n                    <h2 id=\"medsihavetotake\" className=\"text-center mt-3 mb-3 text-color\">Medications I have to take</h2>\n                    <div id=\"medsnottaken\">\n                    {state.medroutine.map(log =>\n                        <Medsnottaken \n                        key={log.id}\n                        id={log.id}\n                        name={log.medicinename}\n                        dose={log.dose}\n                        MedLogs={log.MedLogs}\n                        status={false}\n                        />\n                    )}\n                    </div>\n                    </Col>\n\n                    <Col lg={true} >\n                    <h2 id=\"medsivetaken\" className=\"text-center mt-3 mb-3 text-color\">Medications I've taken</h2>\n                    <div id=\"medstaken\">\n                    {state.medroutine.map(log =>\n                        <Medsnottaken\n                        key={log.id}\n                        name={log.medicinename}\n                        dose={log.dose}\n                        MedLogs={log.MedLogs}\n                        status={true}\n                        />\n                    )}\n                    </div>\n                    </Col>\n                </Row>\n            </div>\n        </div>\n        )\n\n}\n\nexport default Dashboard;","import React from \"react\";\n\nfunction Healthtab (props) {\n\n    return (\n        <>\n        <div id=\"healthcards\" className=\"card mb-4\">\n            <div className=\"card-header\">\n                {props.imageUrl? \n                <img className=\"img-thumbnail\" alt={props.author} src={props.imageUrl}/>\n                : <img className=\"img-fluid img-thumbnail\" alt=\"There is no image for this article\"></img>\n                }\n            </div>\n            <div className=\"card-body\">\n                <a className=\"text-color\" href={props.url}><h4>{props.title}</h4>\n                </a>\n                <p label=\"summary\">{props.description}</p>\n                <p>{props.author}</p>\n                <p>{props.publishedAt}</p>\n                \n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default Healthtab;\n","import React, { useEffect} from \"react\";\nimport Healthtab from \"../components/Home/NavBar (public)/Healthtab/index\";\nimport NavBeforeLogin from \"../components/Home/NavBar (public)/index\";\nimport API from \"../utils/API\";\nimport { useStoreContext } from \"../utils/GlobalState\";\nimport {ADD_ARTICLES} from \"../utils/actions\";\n\n\nfunction Health() {\n\n    const [state, dispatch] = useStoreContext();\n    \n    useEffect(() => {\n        API.getNews().then(data => {\n            // console.log(data);\n            let articles = data.data.articles;\n            // console.log(articles)\n            dispatch({ type: ADD_ARTICLES, articles });\n        }).catch((error) => {\n            console.log(error);\n        });\n    }, []);\n\n    console.log('HEALTH STATE', state);\n\n    return (\n        <>\n       <NavBeforeLogin/>\n       <div className=\"container\">\n            <h1 className=\"text-center text-color display-4 font-weight-bold mt-3\" id=\"healthwellness\">Recent News in Health and Wellness</h1>\n            <br></br>\n        <div className=\"row\">\n        {state.headline.map(headline =>\n        <div className=\"col-lg-4 col-md-6\">\n        <Healthtab\n        title={headline.title}\n        author={headline.author}\n        publishedAt={Date(headline.publishedAt)}\n        description={headline.description}\n        url={headline.url}\n        imageUrl={headline.urlToImage}\n        />\n         </div>\n\n        )}\n        </div>\n        </div>\n        </>\n    )\n}\n\nexport default Health;","import React from \"react\";\n\n\nfunction MedLog(props) {\n    return (\n        <>\n        <div className=\"card\">\n            <div className=\"card-body mx-auto\">\n                <div class=\"row\">\n                <span className=\"font-weight-bold mr-2\">Date: </span> {props.date}\n                </div>\n                <div class=\"row\">\n                <span className=\"font-weight-bold mr-2\"> Time: </span>{props.time}\n                </div>\n                <div class=\"row\">\n                <span className=\"font-weight-bold mr-2\"> Status: </span> {!props.status ?\n                <p>Not Taken</p> :\n                <p>Taken</p>\n                }\n                </div>\n            </div>\n        </div>\n        </>\n    )\n}\n\nexport default MedLog;","import React from \"react\";\nimport Accordion from 'react-bootstrap/Accordion';\nimport Card from 'react-bootstrap/Card';\nimport MedLog from \"../MedLog/index\";\n\nfunction Meddata(props) {\n    console.log('Meddata PROPS', props)\n\n    return (\n\n        <Accordion >\n            <Card className = \"col-lg-6 col-md-8 col-sm-12 mx-auto\"id=\"bluecard\" >\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\" id=\"margin\">\n                {props.medicine}\n            </Accordion.Toggle>\n                <Accordion.Collapse eventKey=\"0\">\n                    <Card.Body >\n                        <div><strong>Amount of intake: </strong> {props.dose}</div>\n                        <div><strong>Frequency of intake (per day): </strong> {props.dosage}</div>\n                        <div><strong>Duration of intake (days): </strong> {props.datecount}</div>\n                        <div><strong>Logs: </strong>\n                            {props.MedLogs.map(log =>   \n                            <MedLog\n                                date={log.date}\n                                time={log.time}\n                                status={log.status}\n                            />\n                            )}\n                            </div>\n\n                    </Card.Body>\n                </Accordion.Collapse>\n            </Card>\n            \n        </Accordion>\n      \n    )\n}\n\nexport default Meddata;","import React from \"react\";\nimport NavAfterLogin from \"../components/Nav (afterlogin)/index\";\nimport Meddata from \"../components/My Medications/Med data/index\";\nimport { useStoreContext } from \"../utils/GlobalState\";\n\nfunction MyMedications() {\n\n    const [state, dispatch] = useStoreContext();\n\n    console.log('MEDROUTINE STATE', state);\n\n    return (\n        <>\n            <NavAfterLogin></NavAfterLogin>\n            <div className=\"container text-center text-color\" id=\"meddata\">\n            <a name=\"top\"></a>\n                <h2 className=\"mt-4\">My Medications</h2>\n                <br></br>\n                {/* {!state.medroutine[0].id ?  */}\n                {state.medroutine.map(medroutine =>\n                    <Meddata\n                        key={medroutine.id}\n                        medicine={medroutine.medicinename}\n                        datecount={medroutine.datecount}\n                        dosage={medroutine.dosage}\n                        dose={medroutine.dose}\n                        MedLogs={medroutine.MedLogs}\n                    />\n                )}\n                 {/* : <h1>No routines yet!</h1>\n                } */}\n                  <a href=\"#top\">Back to top</a>\n            </div>\n        </>\n    )\n}\n\nexport default MyMedications;","import React, { useContext, useRef } from \"react\";\nimport { StoreContext } from \"../../../utils/GlobalState\";\nimport ApiCalls from \"../../../utils/API\"\nimport { USER_SIGN_UP, GRAB_USER_ROUTINE, LOGGED_TO_TRUE } from \"../../../utils/actions\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction SignupForm() {\n\n    const [state, dispatch] = useContext(StoreContext);\n\n    const firstName = useRef();\n    const lastName = useRef();\n    const userName = useRef();\n    const password = useRef();\n    const email = useRef();\n\n    const usersignup = (event) => {\n        event.preventDefault();\n        // dispatch({ type: \"usersignup\" });\n        //alert(\"button clicked\");\n        //alert(firstName.current.value + \" \" + lastName.current.value + \" \" + userName.current.value + \" \" + password.current.value + \" \" + email.current.value);\n        var newUser = {\n            firstname: firstName.current.value,\n            lastname: lastName.current.value,\n            username: userName.current.value,\n            password: password.current.value,\n            email: email.current.value,\n        };\n\n        // console.log(firstName.current.value + \" \" + lastName.current.value + \" \" + userName.current.value + \" \" + password.current.value + \" \" + email.current.value);\n        ApiCalls.saveUser(newUser)\n            .then(function (data) {\n                console.log(\"new user's data\", data);\n                dispatch({ type: USER_SIGN_UP, newUser });\n                // dispatch({ type: LOGGED_TO_TRUE })\n                getUserRoutine(data.data.id)\n                window.location.replace(\"/\");\n            }).catch(err => console.log(err));\n    }\n\n    function getUserRoutine(userid) {\n        axios.get(\"/api/user/\" + { userid } + \"/medRoutine\").then((response) => console.log(response))\n    }\n\n    //console.log(\"dispatch\", state);\n\n    return (\n        // state.logged ? (<Redirect to='/dashboard' />) :\n            <div>\n                <h2 className=\"text-center mt-4 mb-3\">Signup</h2>\n                <form className=\"mx-auto col-lg-5 col-md-6 col-sm-11 mt-4\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputFirstName\" aria-describedby=\"emailHelp\" placeholder=\"Your first name...\" ref={firstName}>\n                        </input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputLastName1\" placeholder=\"Your last name...\" ref={lastName}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputUsername1\" placeholder=\"Your username...\" ref={userName}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Your password...\" ref={password}></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Your email...\" ref={email}></input>\n                    </div>\n                    <button type=\"submit\" id=\"button-blue\" className=\"btn text-light center\" onClick={usersignup}>Sign Up</button>\n                </form>\n            </div>\n    )\n}\n\nexport default SignupForm;","import React from \"react\";\nimport NavBeforeLogin from \"../components/Home/NavBar (public)/index\"\nimport SignupForm from \"../components/Home/Signup form/index\";\n\n\nfunction Signup() {\n    return (\n        <>\n            <NavBeforeLogin />\n            <div className=\"container text-color\">\n                <SignupForm />\n            </div>\n\n        </>\n    )\n}\n\nexport default Signup;","import React, {useContext} from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Home from \"./pages/Homepage\";\nimport MedicationForm from \"./pages/AddMedications\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Health from \"./pages/Healthpage\";\nimport MyMedicatons from \"./pages/MyMedicationspage\"\nimport Signup from \"./pages/Signup\";\n//import Nav from \"./components/Nav\";\nimport { StoreProvider} from \"./utils/GlobalState\";\n\n\n\nfunction App() {\n\n  return (\n\n    <Router>\n      <div>\n        <StoreProvider>\n        {/* <Nav /> */}\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/home\" component={Home} />\n          <Route exact path=\"/addmedications\" component={MedicationForm} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          {/* <Route render={()=> (state.logged) ? <Dashboard></Dashboard> : <Redirect to ='/'></Redirect>}></Route> */}\n          <Route exact path=\"/health\" component={Health} />\n          <Route exact path=\"/mymedications\" component={MyMedicatons} />\n          <Route exact path=\"/signup\" component={Signup} />\n          {/* <Route component={NoMatch} /> */}\n        </Switch>\n        </StoreProvider>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}